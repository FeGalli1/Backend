openapi: 3.0.3

info:
  version: 1.0.0
  title: API de E-commerce
  description: API para gestionar productos, carritos y operaciones de administración en un sistema de comercio electrónico.
  termsOfService: https://example.com/terminos-de-servicio
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  contact:
    name: Felipe Galli
    email: felipegall1.fg@gmail.com

tags:
  - name: productos
    description: Operaciones relacionadas con la gestión de productos
  - name: carritos
    description: Operaciones relacionadas con la gestión de carritos de compra
  - name: admin
    description: Operaciones relacionadas con tareas de administración

servers:
  - url: http://{HOST}:{PORT}/{BASE_PATH}
    variables:
      HOST:
        default: 'localhost'
      PORT:
        default: '3001'
      BASE_PATH:
        default: api

paths:
  /product:
    get:
      tags:
        - productos
      summary: Obtener todos los productos
      responses:
        200:
          description: Un array JSON de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Producto'
        500:
          description: Error inesperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - productos
      summary: Crear un nuevo producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producto'
      responses:
        201:
          description: El producto recién creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
        500:
          description: Error inesperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /product/{productId}:
    parameters:
      - name: productId
        in: path
        description: El ID del producto a recuperar
        required: true
        schema:
          $ref: '#/components/schemas/IDProducto'
    get:
      tags:
        - productos
      summary: Recuperar un solo producto por ID
      responses:
        200:
          description: El producto correspondiente al ID proporcionado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
        404:
          description: Producto no encontrado para el ID proporcionado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error inesperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - productos
      summary: Actualizar un producto por ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producto'
      responses:
        200:
          description: El producto actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
        404:
          description: Producto no encontrado para el ID proporcionado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error inesperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - productos
      summary: Eliminar un producto por ID
      responses:
        200:
          description: El producto eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
        404:
          description: Producto no encontrado para el ID proporcionado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error inesperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /carts:
    post:
      tags:
        - carritos
      summary: Crear un nuevo carrito de compra
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: Se ha creado un nuevo carrito de compra
          content:
            application/json:
              schema:
                type: object
        500:
          description: Error inesperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
        - carritos
      summary: Recuperar todos los carritos de compra
      responses:
        200:
          description: Un array JSON de carritos de compra
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Carrito'
        500:
          description: Error inesperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /carts/{cartId}:
    parameters:
      - name: cartId
        in: path
        description: El ID del carrito de compra a recuperar
        required: true
        schema:
          $ref: '#/components/schemas/IDCarrito'
    get:
      tags:
        - carritos
      summary: Recuperar un solo carrito de compra por ID
      responses:
        200:
          description: El carrito de compra correspondiente al ID proporcionado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carrito'
        404:
          description: Carrito de compra no encontrado para el ID proporcionado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error inesperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - carritos
      summary: Eliminar un carrito de compra por ID
      responses:
        200:
          description: El carrito de compra eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carrito'
        404:
          description: Carrito de compra no encontrado para el ID proporcionado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Error inesperado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    IDProducto:
      type: string
      description: El identificador único de un producto
    Producto:
      type: object
      required:
        - name
        - photo
        - price
        - category
        - description
        - stock
      properties:
        id:
          $ref: '#/components/schemas/IDProducto'
        name:
          type: string
        photo:
          type: string
        price:
          type: number
        owner:
          type: array
        category:
          type: string
          enum:
            - Computadoras
            - Teléfonos
            - Accesorios
        description:
          type: string
        stock:
          type: number
    IDCarrito:
      type: string
      description: El identificador único de un carrito de compra
    Carrito:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IDCarrito'
        owner:
          type: object
        items:
          type: array
          items:
            type: object
            properties:
              productId:
                $ref: '#/components/schemas/IDProducto'
              quantity:
                type: integer
      required:
        - items
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Un mensaje de error legible para humanos
