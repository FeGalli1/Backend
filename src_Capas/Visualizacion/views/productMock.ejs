<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Lista de Productos</title>

    <!-- Enlaces a Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body>
    <div class="container">
        <div class="d-flex justify-content-end mt-3">
            <% if (user) { %>
                <h3 class="text-end">BIENVENIDO <%= user.last_name %> <%= user.first_name%></h3>
                <a href="/logout" class="btn btn-primary me-2">Cerrar sesión</a>
            <% } else { %>
                <a href="/login" class="btn btn-primary me-2">Iniciar sesión</a>
                <a href="/register" class="btn btn-success">Registrarse</a>
            <% } %>
        </div>
        <h1 class="mt-5">Lista de Productos</h1>

        <% paginatedProducts.forEach(product => { %>
            <div class="card mt-4">
                <div class="card-body">
                    <h2 class="card-title"><%= product.name %></h2>
                    <p class="card-text">Precio: $ <%= product.price %></p>
                    <a href="/products/<%= product._id %>" style="margin: 1rem;" class="btn btn-primary">Ver detalles</a>
        
                    <form>
                        <input type="hidden" name="product" value="<%= product._id %>" />
                        <% if (user) { %>
                            <input type="hidden" name="cartId" value="<%= user.cart %>" /> 
                            <label for="quantity_<%= product._id %>">Cantidad:</label>
                            <input type="number" id="quantity_<%= product._id %>" name="quantity" value="1" min="1">
                            <button style="margin: 1rem;" type="button" class="btn btn-success" onclick="addToCart('<%= product._id %>', document.getElementById('quantity_<%= product._id %>').value, '<%= user.cart %>');">Agregar al carrito</button>
                            <% } else { %>
                            <a href="/login" class="btn btn-primary me-2">Iniciar sesión</a>
                        <% } %>
                    </form>

        
                </div>
            </div>
        <% }); %>
        
        <div class="mt-4">
            <% if (prevLink) { %>
                <a href="<%= prevLink %>" class="btn btn-primary">Página anterior</a>
            <% } %>

            <% if (nextLink) { %>
                <a href="<%= nextLink %>" class="btn btn-primary ms-2">Página siguiente</a>
            <% } %>
        </div>
    </div>
    <% if (user) { %>

        <button style="margin: 1rem;" onclick='finalizePurchase( "<%= user.cart %>")' class="btn btn-primary">Finalizar Compra</button>
        <% } %>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Carrito local
        let localCart = [];

        // Función para agregar al carrito local y enviar al servidor
        function addToCart(productId, quantity, cartId) {
    const product = {
        id: productId,
        quantity: parseInt(quantity, 10),
    };

    // Verifica si ya existe un producto con el mismo ID en el carrito local
    const existingProductIndex = localCart.findIndex(item => item.id === productId);

    if (existingProductIndex !== -1) {
        // Si ya existe, actualiza la cantidad del producto existente
        localCart[existingProductIndex].quantity += product.quantity;
    } else {
        // Si no existe, simplemente agrega el nuevo producto al carrito local
        localCart.push(product);
    }

    console.log("Productos en el carrito local:", localCart);
            // Realizar la solicitud POST al servidor
            fetch(`http://localhost:3001/api/carts/${cartId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ products: localCart }), // Agregamos el producto como un array
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log("Respuesta del servidor:", data);
                // Limpiar el carrito local después de agregar el producto
            })
            .catch(error => {
                console.error("Error al realizar la solicitud POST:", error);
                alert("Error al agregar al carrito. Por favor, inténtalo de nuevo.");
            });
        }

        // Función para finalizar la compra
        function finalizePurchase(cartId) {
            // Enviar todos los productos del carrito al servidor para finalizar la compra
            console.log(localCart);
            fetch(`http://localhost:3001/api/carts/${cartId}/purchase`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ products: localCart }),
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log("Respuesta del servidor:", data);
                if (data.status === 'success') {
                    // Limpiar el carrito local después de finalizar la compra
                    localCart = [];
                    // Redirigir al usuario a la página del ticket con el ID proporcionado
                window.location.href = `/api/carts/ticket/${data.ticketId}`;
                }   
            })
            .catch(error => {
                console.error("Error al realizar la solicitud POST:", error);
                // Muestra un mensaje de alerta más informativo
                alert("Error al finalizar la compra. La respuesta del servidor no es válida.");
            });
        }

    </script>
</body>
</html>
